{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Repositories\\\\department-web-app\\\\department-app\\\\src\\\\components\\\\Department.js\";\nimport React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport AddDepartmentModal from './AddDepartmentModal';\nimport EditDepartmentModal from './EditDepartmentModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Department extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickAddDepartment = () => {\n      this.setState({\n        showAddDepartmentModal: true\n      });\n    };\n\n    this.onHideAddDepartmentModal = () => {\n      this.setState({\n        showAddDepartmentModal: false\n      });\n      this.refreshList();\n    };\n\n    this.onClickEditDepartment = dep => {\n      this.setState({\n        showEditDepartmentModal: true,\n        departmentId: dep.DepartmentId,\n        departmentName: dep.DepartmentName\n      });\n    };\n\n    this.onHideEditDepartmentModal = () => {\n      this.setState({\n        showEditDepartmentModal: false\n      });\n      this.refreshList();\n    };\n\n    this.onClickDeleteDepartment = dep => {\n      if (window.confirm(\"Are you sure you want to delete department \\\"\" + dep.DepartmentName + \"\\\"? This cannot be undone!\")) {}\n    };\n\n    this.state = {\n      deps: [],\n      showAddDepartmentModal: false,\n      showEditDepartmentModal: false\n    };\n  }\n\n  refreshList() {\n    fetch(process.env.REACT_APP_API + 'Department').then(response => response.json()).then(data => {\n      this.setState({\n        deps: data\n      });\n    }, error => {\n      console.error(\"We could not load Departments. Error: \", error);\n      alert(\"We could not load Departments. Check console for more informations.\");\n    });\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    const {\n      deps,\n      departmentId,\n      departmentName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: \"mt-4\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DepartmentId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DepartmentName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: deps.map(dep => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: dep.DepartmentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dep.DepartmentName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"info\",\n                  onClick: () => this.onClickEditDepartment(dep),\n                  children: \" Edit \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"danger\",\n                  onClick: () => this.onClickDeleteDepartment(dep),\n                  children: \" Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(EditDepartmentModal, {\n                show: this.state.showEditDepartmentModal,\n                onHide: this.onHideEditDepartmentModal,\n                departmentid: departmentId,\n                departmentname: departmentName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, dep.DepartmentId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.onClickAddDepartment,\n          children: \" Add Department \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddDepartmentModal, {\n        show: this.state.showAddDepartmentModal,\n        onHide: this.onHideAddDepartmentModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Department;","map":{"version":3,"sources":["D:/Coding/Repositories/department-web-app/department-app/src/components/Department.js"],"names":["React","Table","Button","ButtonToolbar","AddDepartmentModal","EditDepartmentModal","Department","Component","constructor","props","onClickAddDepartment","setState","showAddDepartmentModal","onHideAddDepartmentModal","refreshList","onClickEditDepartment","dep","showEditDepartmentModal","departmentId","DepartmentId","departmentName","DepartmentName","onHideEditDepartmentModal","onClickDeleteDepartment","window","confirm","state","deps","fetch","process","env","REACT_APP_API","then","response","json","data","error","console","alert","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Table } from 'react-bootstrap';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddDepartmentModal from './AddDepartmentModal';\r\nimport EditDepartmentModal from './EditDepartmentModal';\r\n\r\nclass Department extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            deps:[], \r\n            showAddDepartmentModal: false,\r\n            showEditDepartmentModal: false\r\n        };\r\n\r\n    };\r\n\r\n    refreshList() {\r\n        fetch(process.env.REACT_APP_API + 'Department').then(response => response.json()).then(\r\n            (data) => {\r\n                this.setState({deps:data});\r\n            },\r\n            (error) => {\r\n                console.error(\"We could not load Departments. Error: \", error);\r\n                alert(\"We could not load Departments. Check console for more informations.\");\r\n            }\r\n        );\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshList();\r\n    };\r\n\r\n    onClickAddDepartment = () => {\r\n        this.setState({ showAddDepartmentModal: true });\r\n    };\r\n\r\n    onHideAddDepartmentModal = () => {\r\n        this.setState({ showAddDepartmentModal: false });\r\n        this.refreshList();\r\n    };\r\n\r\n    onClickEditDepartment = (dep) => {\r\n        this.setState({\r\n            showEditDepartmentModal: true, \r\n            departmentId: dep.DepartmentId, \r\n            departmentName: dep.DepartmentName\r\n        });\r\n    };\r\n\r\n    onHideEditDepartmentModal = () => {\r\n        this.setState({ showEditDepartmentModal: false });\r\n        this.refreshList();\r\n    };\r\n\r\n    onClickDeleteDepartment = (dep) => {\r\n        if(window.confirm(\"Are you sure you want to delete department \\\"\" + dep.DepartmentName + \"\\\"? This cannot be undone!\")) {\r\n\r\n        }\r\n    };\r\n    \r\n    render(){\r\n        const {deps, departmentId, departmentName} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DepartmentId</th>\r\n                            <th>DepartmentName</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {deps.map(dep => \r\n                            <tr key={dep.DepartmentId}>\r\n                                <td>{dep.DepartmentId}</td>\r\n                                <td>{dep.DepartmentName}</td>\r\n                                <td>\r\n                                    <ButtonToolbar>\r\n                                        <Button className=\"mr-2\" variant=\"info\" onClick={()=>this.onClickEditDepartment(dep)}> Edit </Button>\r\n                                    </ButtonToolbar>\r\n                                    <ButtonToolbar>\r\n                                        <Button className=\"mr-2\" variant=\"danger\" onClick={()=>this.onClickDeleteDepartment(dep)}> Delete </Button>\r\n                                    </ButtonToolbar>\r\n\r\n                                    <EditDepartmentModal show={this.state.showEditDepartmentModal} onHide={this.onHideEditDepartmentModal} departmentid={departmentId} departmentname={departmentName}/>\r\n                                </td>\r\n                            </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <ButtonToolbar>\r\n                    <Button variant=\"primary\" onClick={this.onClickAddDepartment}> Add Department </Button>\r\n                </ButtonToolbar>\r\n\r\n                <AddDepartmentModal show={this.state.showAddDepartmentModal} onHide={this.onHideAddDepartmentModal}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Department;"]},"metadata":{},"sourceType":"module"}